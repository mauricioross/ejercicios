{"version":3,"sources":["logo.svg","Pages/TestA/index.jsx","Pages/TestB/index.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","TestA","useState","imparArray","setImparArray","multiplcadoArray","setMultiplicadoArray","numerosSumados","setNumerosSumados","myArray","a","newArray","forEach","num","push","suma","val","className","onClick","filterNumber","map","multipleNumbers","numM","sumarArray","TestB","listHeroes","setListHeroes","data","results","renderTooltip","props","Tooltip","style","borderRadius","backgroundColor","padding","width","color","textAlign","id","type","getHeroes","heroe","Card","Img","variant","src","thumbnail","path","extension","Body","Title","name","Text","description","length","substring","Footer","OverlayTrigger","placement","delay","show","hide","overlay","cant","comics","available","icon","faBook","series","faTv","stories","faScroll","App","to","textDecoration","fontWeight","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2dbc3dfd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState } from \"react\";\n\nimport \"./styles.scss\";\n\nconst TestA = () => {\n  const [imparArray, setImparArray] = useState([]);\n  const [multiplcadoArray, setMultiplicadoArray] = useState([]);\n  const [numerosSumados,setNumerosSumados] = useState(0)\n  const myArray = [1, 2, 3, 4, 5, 6, 7];\n\n  async function filterNumber() {\n    let newArray = [];\n    myArray.forEach((num) => {\n      if (num % 2 != 0) {\n        newArray.push(num);\n      }\n    });\n    setImparArray(newArray);\n  }\n  async function multipleNumbers() {\n    let newArray = [];\n    imparArray.forEach((num) => {\n      newArray.push(num * 2);\n    });\n    // await setMultiplicador(newArray);\n    await setMultiplicadoArray(newArray);\n  }\n\n  async function sumarArray(){\n    let suma=0;\n    multiplcadoArray.forEach((val)=>{\n      suma+=val;\n    });\n    setNumerosSumados(suma);\n  }\n  return (\n    <>\n      <div className=\"testA-container\">\n        <h1>TestA</h1>\n        <ul>\n          <li>Primero filtrar solo los números impares.</li>\n          <li>Del resultado anterior, multiplicar cada número por 2</li>\n          <li>\n            Finalmente de los resultados obtenidos del punto 2, sumarlos y\n            entregar un único resultado.\n          </li>\n        </ul>\n\n        <p>Input : [1, 2, 3, 4, 5, 6, 7]</p>\n        <span>\n          <button onClick={() => filterNumber()}>Obtener numeros filtrados</button>\n        </span>\n        <div className=\"outputOne\">\n          <ul>\n            {imparArray.map((num) => (\n              <li>{num}</li>\n            ))}\n          </ul>\n        </div>\n        <span>\n          <button onClick={() => multipleNumbers()}>Obtener numeros multiplicados</button>\n        </span>\n        <div className=\"outputOne\">\n          <ul>\n            {multiplcadoArray.map((numM) => (\n              <li>{numM}</li>\n            ))}\n          </ul>\n        </div>\n        <span>\n          <button onClick={() => sumarArray()}>Obtener numeros sumados</button>\n        </span>\n        <div className=\"outputOne\">\n            <h5>El valor total es: {numerosSumados}</h5>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default TestA;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./styles.scss\";\nimport { Card, Button, Tooltip } from \"react-bootstrap\";\nimport Popover from \"react-bootstrap/Popover\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport * as data from \"./backup.json\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBook, faTv, faScroll } from \"@fortawesome/free-solid-svg-icons\";\nconst TestB = () => {\n  const public_key = \"7a910676308a273c0e9b02875ff0cb2c\";\n  const [listHeroes, setListHeroes] = useState([]);\n  async function getHeroes() {\n    const url =\n      \"https://gateway.marvel.com:443/v1/public/characters?limit=30&apikey=7a910676308a273c0e9b02875ff0cb2c\";\n\n    // await axios.get(url,{apikey:public_key}).then((resp) => {\n    //   console.log(resp);\n    //   setListHeroes(resp.data.data.results)\n    // });\n    setListHeroes(data.default.data.results);\n  }\n  function renderTooltip(props) {\n    return (\n      <Tooltip style={{borderRadius:5,backgroundColor:'red',padding:1, width:'10vw',color:'#fff',textAlign:'center'}} id=\"button-tooltip\" {...props}>\n        {props.type}\n      </Tooltip>\n    );\n  }\n  return (\n    <>\n      <div className=\"testB-container\">\n        <button\n          onClick={() => {\n            getHeroes();\n          }}\n        >\n          Cargar Heroes\n        </button>\n\n        <div className=\"grilla\">\n          {listHeroes.map((heroe) => (\n            <Card className=\"item\">\n              <Card.Img\n                variant=\"top\"\n                src={heroe.thumbnail.path + \".\" + heroe.thumbnail.extension}\n                className=\"cardImage\"\n              />\n              <Card.Body className=\"card-body\">\n                <Card.Title>\n                  <h4>{heroe.name}</h4>\n                </Card.Title>\n                <Card.Text className=\"content\">\n                  Descripcion:\n                  <p>\n                    {heroe.description.length > 0\n                      ? heroe.description.substring(0, 99) + \"...\"\n                      : \"Aun no tengo descripción\"}\n                  </p>\n                </Card.Text>\n                <Card.Footer className=\"footer\">\n                  <OverlayTrigger\n                    placement=\"top\"\n                    delay={{ show: 150, hide: 300 }}\n                    overlay={renderTooltip({cant:heroe.comics.available,type:'comics'})}\n                  >\n                     <div className=\"info\">\n                    {heroe.comics.available} <FontAwesomeIcon icon={faBook} />\n                  </div>\n                  </OverlayTrigger>\n                  <OverlayTrigger\n                    placement=\"bottom\"\n                    delay={{ show: 150, hide: 300 }}\n                    overlay={renderTooltip({cant:heroe.series.available,type:'series'})}\n                  >\n                     <div className=\"info\">\n                    {heroe.series.available} <FontAwesomeIcon icon={faTv} />\n                  </div>\n                  </OverlayTrigger>\n                  <OverlayTrigger\n                    placement=\"right\"\n                    delay={{ show: 150, hide: 300 }}\n                    overlay={renderTooltip({cant:heroe.stories.available,type:'stories'})}\n                  >\n                     <div className=\"info\">\n                    {heroe.stories.available}{\" \"}\n                    <FontAwesomeIcon icon={faScroll} />\n                  </div>\n                  </OverlayTrigger>\n                 \n                 \n                 \n                </Card.Footer>\n              </Card.Body>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default TestB;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport TestA from './Pages/TestA';\nimport TestB from './Pages/TestB';\nimport Home from './Pages/Home';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n      <div className=\"App-container\">\n        <h5>Selecciona una de las pruebas</h5>\n        <nav className=\"menu\">\n          <ul >\n            \n            <li>\n              <Link to=\"/testa\" style={{textDecoration:'none',color:'#ffffff',fontWeight:'bold'}}>Test A</Link>\n            </li>\n            <li>\n              <Link to=\"/testb\" style={{textDecoration:'none',color:'#ffffff',fontWeight:'bold'}}>Test B</Link>\n            </li>\n          </ul>\n        </nav>\n        <div className=\"pageContainer\">\n\n        \n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/testa\">\n            <TestA />\n          </Route>\n          <Route path=\"/testb\">\n            <TestB />\n          </Route>\n          {/* <Route path=\"/\">\n            <Home />\n          </Route> */}\n        </Switch>\n        </div>\n      </div>\n    </Router>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}